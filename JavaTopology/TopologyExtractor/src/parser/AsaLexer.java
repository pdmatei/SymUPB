// Generated from C:\Users\Matei\Dropbox\papers\Costin\Symnet\SymUPB\JavaTopology\TopologyExtractor\src\grammar\Asa.g4 by ANTLR 4.x
package parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AsaLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__24=1, T__23=2, T__22=3, T__21=4, T__20=5, T__19=6, T__18=7, T__17=8, 
		T__16=9, T__15=10, T__14=11, T__13=12, T__12=13, T__11=14, T__10=15, T__9=16, 
		T__8=17, T__7=18, T__6=19, T__5=20, T__4=21, T__3=22, T__2=23, T__1=24, 
		T__0=25, LINE_COMMENT=26, COMMENT=27, TOKEN=28, NUMBER=29, NEWLINE=30, 
		WS=31, NL=32;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '"
	};
	public static final String[] ruleNames = {
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"LINE_COMMENT", "COMMENT", "TOKEN", "NUMBER", "NEWLINE", "WS", "NL"
	};


	public AsaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Asa.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\"\u013b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4"+
		"\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\33\3\33\3\33\3\33\7\33\u0106\n\33\f\33\16\33\u0109\13"+
		"\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\7\34\u0113\n\34\f\34\16\34"+
		"\u0116\13\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\7\35\u011f\n\35\f\35\16"+
		"\35\u0122\13\35\3\36\6\36\u0125\n\36\r\36\16\36\u0126\3\37\5\37\u012a"+
		"\n\37\3\37\3\37\3 \6 \u012f\n \r \16 \u0130\3 \3 \3!\5!\u0136\n!\3!\3"+
		"!\3!\3!\4\u0107\u0114\2\"\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32"+
		"\63\33\65\34\67\359\36;\37= ?!A\"\3\2\6\4\2C\\c|\7\2/;>@C\\aac|\3\2\62"+
		";\4\2\13\13\"\"\u0141\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\3C\3\2\2"+
		"\2\5M\3\2\2\2\7T\3\2\2\2\tf\3\2\2\2\13t\3\2\2\2\rv\3\2\2\2\17\u0082\3"+
		"\2\2\2\21\u0089\3\2\2\2\23\u0091\3\2\2\2\25\u0096\3\2\2\2\27\u009f\3\2"+
		"\2\2\31\u00aa\3\2\2\2\33\u00b1\3\2\2\2\35\u00b4\3\2\2\2\37\u00b8\3\2\2"+
		"\2!\u00c1\3\2\2\2#\u00cb\3\2\2\2%\u00d7\3\2\2\2\'\u00d9\3\2\2\2)\u00db"+
		"\3\2\2\2+\u00ea\3\2\2\2-\u00f1\3\2\2\2/\u00f5\3\2\2\2\61\u00fa\3\2\2\2"+
		"\63\u00ff\3\2\2\2\65\u0101\3\2\2\2\67\u010e\3\2\2\29\u011c\3\2\2\2;\u0124"+
		"\3\2\2\2=\u0129\3\2\2\2?\u012e\3\2\2\2A\u0135\3\2\2\2CD\7k\2\2DE\7p\2"+
		"\2EF\7v\2\2FG\7g\2\2GH\7t\2\2HI\7h\2\2IJ\7c\2\2JK\7e\2\2KL\7g\2\2L\4\3"+
		"\2\2\2MN\7p\2\2NO\7c\2\2OP\7o\2\2PQ\7g\2\2QR\7k\2\2RS\7h\2\2S\6\3\2\2"+
		"\2TU\7p\2\2UV\7q\2\2VW\7\"\2\2WX\7u\2\2XY\7g\2\2YZ\7e\2\2Z[\7w\2\2[\\"+
		"\7t\2\2\\]\7k\2\2]^\7v\2\2^_\7{\2\2_`\7/\2\2`a\7n\2\2ab\7g\2\2bc\7x\2"+
		"\2cd\7g\2\2de\7n\2\2e\b\3\2\2\2fg\7p\2\2gh\7q\2\2hi\7\"\2\2ij\7k\2\2j"+
		"k\7r\2\2kl\7\"\2\2lm\7c\2\2mn\7f\2\2no\7f\2\2op\7t\2\2pq\7g\2\2qr\7u\2"+
		"\2rs\7u\2\2s\n\3\2\2\2tu\7*\2\2u\f\3\2\2\2vw\7f\2\2wx\7g\2\2xy\7u\2\2"+
		"yz\7e\2\2z{\7t\2\2{|\7k\2\2|}\7r\2\2}~\7v\2\2~\177\7k\2\2\177\u0080\7"+
		"q\2\2\u0080\u0081\7p\2\2\u0081\16\3\2\2\2\u0082\u0083\7r\2\2\u0083\u0084"+
		"\7g\2\2\u0084\u0085\7t\2\2\u0085\u0086\7o\2\2\u0086\u0087\7k\2\2\u0087"+
		"\u0088\7v\2\2\u0088\20\3\2\2\2\u0089\u008a\7p\2\2\u008a\u008b\7g\2\2\u008b"+
		"\u008c\7v\2\2\u008c\u008d\7o\2\2\u008d\u008e\7c\2\2\u008e\u008f\7u\2\2"+
		"\u008f\u0090\7m\2\2\u0090\22\3\2\2\2\u0091\u0092\7j\2\2\u0092\u0093\7"+
		"q\2\2\u0093\u0094\7u\2\2\u0094\u0095\7v\2\2\u0095\24\3\2\2\2\u0096\u0097"+
		"\7u\2\2\u0097\u0098\7v\2\2\u0098\u0099\7c\2\2\u0099\u009a\7p\2\2\u009a"+
		"\u009b\7f\2\2\u009b\u009c\7c\2\2\u009c\u009d\7t\2\2\u009d\u009e\7f\2\2"+
		"\u009e\26\3\2\2\2\u009f\u00a0\7k\2\2\u00a0\u00a1\7r\2\2\u00a1\u00a2\7"+
		"\"\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7f\2\2\u00a4\u00a5\7f\2\2\u00a5"+
		"\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7u\2\2"+
		"\u00a9\30\3\2\2\2\u00aa\u00ab\7u\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7"+
		"c\2\2\u00ad\u00ae\7v\2\2\u00ae\u00af\7k\2\2\u00af\u00b0\7e\2\2\u00b0\32"+
		"\3\2\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7s\2\2\u00b3\34\3\2\2\2\u00b4"+
		"\u00b5\7c\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7\7{\2\2\u00b7\36\3\2\2\2\u00b8"+
		"\u00b9\7g\2\2\u00b9\u00ba\7z\2\2\u00ba\u00bb\7v\2\2\u00bb\u00bc\7g\2\2"+
		"\u00bc\u00bd\7p\2\2\u00bd\u00be\7f\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0"+
		"\7f\2\2\u00c0 \3\2\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4"+
		"\7\"\2\2\u00c4\u00c5\7p\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7o\2\2\u00c7"+
		"\u00c8\7g\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7h\2\2\u00ca\"\3\2\2\2\u00cb"+
		"\u00cc\7c\2\2\u00cc\u00cd\7e\2\2\u00cd\u00ce\7e\2\2\u00ce\u00cf\7g\2\2"+
		"\u00cf\u00d0\7u\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7/\2\2\u00d2\u00d3"+
		"\7n\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7u\2\2\u00d5\u00d6\7v\2\2\u00d6"+
		"$\3\2\2\2\u00d7\u00d8\7\60\2\2\u00d8&\3\2\2\2\u00d9\u00da\7+\2\2\u00da"+
		"(\3\2\2\2\u00db\u00dc\7u\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7e\2\2\u00de"+
		"\u00df\7w\2\2\u00df\u00e0\7t\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7v\2\2"+
		"\u00e2\u00e3\7{\2\2\u00e3\u00e4\7/\2\2\u00e4\u00e5\7n\2\2\u00e5\u00e6"+
		"\7g\2\2\u00e6\u00e7\7x\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7n\2\2\u00e9"+
		"*\3\2\2\2\u00ea\u00eb\7i\2\2\u00eb\u00ec\7n\2\2\u00ec\u00ed\7q\2\2\u00ed"+
		"\u00ee\7d\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0\7n\2\2\u00f0,\3\2\2\2\u00f1"+
		"\u00f2\7p\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7v\2\2\u00f4.\3\2\2\2\u00f5"+
		"\u00f6\7f\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7p\2\2\u00f8\u00f9\7{\2\2"+
		"\u00f9\60\3\2\2\2\u00fa\u00fb\7x\2\2\u00fb\u00fc\7n\2\2\u00fc\u00fd\7"+
		"c\2\2\u00fd\u00fe\7p\2\2\u00fe\62\3\2\2\2\u00ff\u0100\7#\2\2\u0100\64"+
		"\3\2\2\2\u0101\u0102\7\61\2\2\u0102\u0103\7\61\2\2\u0103\u0107\3\2\2\2"+
		"\u0104\u0106\13\2\2\2\u0105\u0104\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0108"+
		"\3\2\2\2\u0107\u0105\3\2\2\2\u0108\u010a\3\2\2\2\u0109\u0107\3\2\2\2\u010a"+
		"\u010b\5=\37\2\u010b\u010c\3\2\2\2\u010c\u010d\b\33\2\2\u010d\66\3\2\2"+
		"\2\u010e\u010f\7\61\2\2\u010f\u0110\7,\2\2\u0110\u0114\3\2\2\2\u0111\u0113"+
		"\13\2\2\2\u0112\u0111\3\2\2\2\u0113\u0116\3\2\2\2\u0114\u0115\3\2\2\2"+
		"\u0114\u0112\3\2\2\2\u0115\u0117\3\2\2\2\u0116\u0114\3\2\2\2\u0117\u0118"+
		"\7,\2\2\u0118\u0119\7\61\2\2\u0119\u011a\3\2\2\2\u011a\u011b\b\34\2\2"+
		"\u011b8\3\2\2\2\u011c\u0120\t\2\2\2\u011d\u011f\t\3\2\2\u011e\u011d\3"+
		"\2\2\2\u011f\u0122\3\2\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121"+
		":\3\2\2\2\u0122\u0120\3\2\2\2\u0123\u0125\t\4\2\2\u0124\u0123\3\2\2\2"+
		"\u0125\u0126\3\2\2\2\u0126\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127<\3"+
		"\2\2\2\u0128\u012a\7\17\2\2\u0129\u0128\3\2\2\2\u0129\u012a\3\2\2\2\u012a"+
		"\u012b\3\2\2\2\u012b\u012c\7\f\2\2\u012c>\3\2\2\2\u012d\u012f\t\5\2\2"+
		"\u012e\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u012e\3\2\2\2\u0130\u0131"+
		"\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0133\b \2\2\u0133@\3\2\2\2\u0134\u0136"+
		"\7\17\2\2\u0135\u0134\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0137\3\2\2\2"+
		"\u0137\u0138\7\f\2\2\u0138\u0139\3\2\2\2\u0139\u013a\b!\2\2\u013aB\3\2"+
		"\2\2\n\2\u0107\u0114\u0120\u0126\u0129\u0130\u0135\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}